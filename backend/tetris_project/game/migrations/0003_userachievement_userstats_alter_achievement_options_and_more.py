# Generated by Django 5.2.5 on 2025-08-24 09:50

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('game', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('score_when_earned', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-earned_at'],
            },
        ),
        migrations.CreateModel(
            name='UserStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_games', models.IntegerField(default=0)),
                ('games_won', models.IntegerField(default=0)),
                ('highest_score', models.IntegerField(default=0)),
                ('highest_level', models.IntegerField(default=0)),
                ('most_lines_cleared', models.IntegerField(default=0)),
                ('longest_game_seconds', models.IntegerField(default=0)),
                ('total_score', models.BigIntegerField(default=0)),
                ('total_lines_cleared', models.IntegerField(default=0)),
                ('total_pieces_placed', models.IntegerField(default=0)),
                ('total_playtime_seconds', models.IntegerField(default=0)),
                ('average_score', models.FloatField(default=0)),
                ('average_lines_per_game', models.FloatField(default=0)),
                ('first_game_at', models.DateTimeField(blank=True, null=True)),
                ('last_game_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='achievement',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='gamesession',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='score',
            options={'ordering': ['-score', '-date_played']},
        ),
        migrations.RenameField(
            model_name='achievement',
            old_name='earned_at',
            new_name='created_at',
        ),
        migrations.RenameField(
            model_name='gamesession',
            old_name='current_level',
            new_name='final_level',
        ),
        migrations.RenameField(
            model_name='gamesession',
            old_name='current_lines',
            new_name='lines_cleared',
        ),
        migrations.RenameField(
            model_name='gamesession',
            old_name='current_score',
            new_name='max_combo',
        ),
        migrations.RenameField(
            model_name='gamesession',
            old_name='last_updated',
            new_name='updated_at',
        ),
        migrations.AlterUniqueTogether(
            name='achievement',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='gamesession',
            name='board_state',
        ),
        migrations.RemoveField(
            model_name='gamesession',
            name='is_active',
        ),
        migrations.AddField(
            model_name='achievement',
            name='conditions',
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name='achievement',
            name='description',
            field=models.TextField(default='Achievement description'),
        ),
        migrations.AddField(
            model_name='achievement',
            name='icon',
            field=models.CharField(default='trophy', max_length=50),
        ),
        migrations.AddField(
            model_name='achievement',
            name='name',
            field=models.CharField(default='Default Achievement', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='achievement',
            name='rarity',
            field=models.CharField(choices=[('common', 'Common'), ('rare', 'Rare'), ('epic', 'Epic'), ('legendary', 'Legendary')], default='common', max_length=20),
        ),
        migrations.AddField(
            model_name='gamesession',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='gamesession',
            name='duration_seconds',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='gamesession',
            name='end_reason',
            field=models.CharField(choices=[('top_out', 'Topped Out'), ('quit', 'Player Quit'), ('completed', 'Completed')], default='top_out', max_length=20),
        ),
        migrations.AddField(
            model_name='gamesession',
            name='ended_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='gamesession',
            name='game_data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='gamesession',
            name='pieces_placed',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='gamesession',
            name='score',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='gamesession',
            name='t_spins',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='gamesession',
            name='tetrises_cleared',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='gamesession',
            name='started_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='gamesession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='score',
            name='duration',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='score',
            name='level',
            field=models.IntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='score',
            name='lines_cleared',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='score',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='gamesession',
            index=models.Index(fields=['user', '-score'], name='game_gamese_user_id_a9b4fe_idx'),
        ),
        migrations.AddIndex(
            model_name='gamesession',
            index=models.Index(fields=['-score'], name='game_gamese_score_dc2706_idx'),
        ),
        migrations.AddIndex(
            model_name='gamesession',
            index=models.Index(fields=['user', '-created_at'], name='game_gamese_user_id_c1faf8_idx'),
        ),
        migrations.AddField(
            model_name='userachievement',
            name='achievement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.achievement'),
        ),
        migrations.AddField(
            model_name='userachievement',
            name='game_session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.gamesession'),
        ),
        migrations.AddField(
            model_name='userachievement',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userstats',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='achievement',
            name='achievement_type',
        ),
        migrations.RemoveField(
            model_name='achievement',
            name='score_when_earned',
        ),
        migrations.RemoveField(
            model_name='achievement',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='userachievement',
            unique_together={('user', 'achievement')},
        ),
    ]
